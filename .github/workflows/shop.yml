name: Rust and Elm CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  Rust:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup default nightly
          rustup update

      - name: Run tests
        env:
          REMOTE_DATABASE_PATH: ./data.sqlite
          STRIPE_SECRET: ""
          STRIPE_KEY: ""
          COMPLETION_REDIRECT: ""
        run: |
          sudo apt-get update &&
          sudo apt-get install -y libsqlite3-dev &&
          cargo install diesel_cli --no-default-features --features sqlite &&
          cargo +nightly test --verbose

  Elm:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.17.0"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('package.json', 'package-lock.json') }}

      - name: Cache ~/.elm
        uses: actions/cache@v3
        with:
          path: ~/.elm
          key: elm-${{ hashFiles('elm.json', 'elm-tooling.json') }}

      - name: npm ci
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: elm-tooling install
        run: npx elm-tooling install

      - name: Validate elm
        run: npx elm --version

      - name: elm test
        run: npx elm-test
